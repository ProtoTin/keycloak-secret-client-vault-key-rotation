version: '3.8'

services:
  keycloak:
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HEALTH_ENABLED: "true"
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
      KC_CLIENT_SECRET_MANAGER: vault
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - vault
    networks:
      - keycloak-network

  vault:
    image: hashicorp/vault:latest
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_DEV_TLS_DISABLE: 1
    volumes:
      - ./scripts:/scripts
    cap_add:
      - IPC_LOCK
    command: server -dev -dev-listen-address=0.0.0.0:8200 -dev-root-token-id=root
    networks:
      - keycloak-network

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - keycloak-network

  status-app:
    build:
      context: .
      dockerfile: app/Dockerfile
    ports:
      - "5001:5000"
    environment:
      FLASK_ENV: development
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
    depends_on:
      - keycloak
      - vault
    networks:
      - keycloak-network

volumes:
  postgres-data:

networks:
  keycloak-network:
    driver: bridge 